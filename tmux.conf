# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.



set -g default-terminal "screen-256color"

set-window-option -g pane-base-index 1

set-option -g base-index 1
set-option -g renumber-windows on
set-option -g status-utf8 on
set-option -g pane-border-fg white
#set-option -g pane-border-bg black
 
set-option -g pane-active-border-bg '#005f87' 
set-option -g pane-active-border-fg black


set-option -g mouse-utf8 on
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on



#reload ~/.tmux.conf
bind r source-file ~/.tmux.conf


# Set the prefix to ^A.
unbind C-b
set -g prefix ^A
bind a send-prefix

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

# screen ^C c 
unbind ^C
bind ^C new-window -c '#{pane_current_path}'
unbind c
bind c new-window -c '#{pane_current_path}'

# detach ^D d
unbind ^D
bind ^D detach

# displays * 
unbind *
bind * list-clients

# next ^@ ^N sp n 
unbind ^@
bind ^@ next-window
unbind ^N
bind ^N next-window
unbind " "
bind " " next-window
unbind n
bind n next-window

# title A
unbind A
bind A command-prompt "rename-window %%"

# other ^A
unbind ^A
bind ^A last-window

# prev ^H ^P p ^? 
unbind ^P
bind ^P previous-window
unbind p
bind p previous-window
unbind BSpace
bind BSpace previous-window

# quit \ 
unbind '\'
bind '\' confirm-before "kill-server"

# kill K k 
unbind K
bind K confirm-before "kill-window"
unbind k
bind k confirm-before "kill-window"

# redisplay ^L l 
unbind ^L
bind ^L refresh-client
unbind l
bind l refresh-client


# " windowlist -b
unbind '"'
bind '"' choose-window

set-option -g xterm-keys on

bind-key -n M-RIGHT resize-pane -R
bind-key -n M-UP    resize-pane -U
bind-key -n M-LEFT  resize-pane -L
bind-key -n M-DOWN  resize-pane -D

bind-key -n M-n select-pane -t:.+
bind-key -n M-Space select-pane -t:.+
bind-key -n M-p select-pane -t:.-

bind-key -n M-0 select-pane -t 0
bind-key -n M-1 select-pane -t 1
bind-key -n M-2 select-pane -t 2
bind-key -n M-3 select-pane -t 3
bind-key -n M-4 select-pane -t 4
bind-key -n M-5 select-pane -t 5
bind-key -n M-6 select-pane -t 6
bind-key -n M-7 select-pane -t 7
bind-key -n M-8 select-pane -t 8
bind-key -n M-9 select-pane -t 9

bind-key -n M-a last-pane

bind-key -n M-q display-panes

bind-key -n M-\ split-window -h -c '#{pane_current_path}'
bind-key -n M-- split-window -c '#{pane_current_path}'

bind-key -n M-k kill-pane
bind-key -n M-w confirm-before "kill-pane"

bind-key -n M-= resize-pane -Z 
bind-key -n M-/ command-prompt "split-window 'man %%'; resize-pane -Z"

bind-key -n M-< swap-pane -U 
bind-key -n M-> swap-pane -D

#
bind T command-prompt "rename-session %%"


#bindkey for copy and paste
setw -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'V' rectangle-toggle
bind-key -t vi-copy 'y' copy-selection
bind-key -t vi-copy 'Y' copy-end-of-line


#status bar
set -g status-bg '#00005f'
set -g status-fg '#b2b2b2'
set -g status-justify centre
set -g status-left '#[bg=#0000af] #(logname)@#H #[bg=#000087] #S '
set -g status-left-length 25
set -g status-right '#[fg=yellow] %m-%d %a %R' 
set -g status-right-length 40
set -g status-position bottom
set -g window-status-current-bg '#005f87'
set -g window-status-current-fg '#ffffff'
set -g window-status-format '  #I#F #W  '
set -g window-status-separator ''
set -g window-status-current-format '  #I#F #W  '

